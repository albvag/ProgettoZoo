/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package logins;


import java.util.ArrayList;
import java.util.Date;
import javax.swing.*;
import javax.swing.table.*;
import progettozoo.Animale;
import progettozoo.DBConnect;
import progettozoo.Visita;
import progettozoo.ProgettoZoo;
import progettozoo.Utente;
import schede.JSchedaAnimale_Veterinario;

/**
 *
 * @author Alberto
 */
public class JVeterinario extends javax.swing.JFrame {

    /**
     * Creates new form JVeterinario
     */
    public String COD_AN, NOME, SPECIE, GENERE, HABITAT;
    public Date DATANASCITA;
    public boolean NOSTRO,PRESENTE,SALUTE;
    public Animale anim_sel = new Animale();
    
    public Utente user = new Utente();
    
    public JVeterinario() {
       

        initComponents();
        
    }
    
    public JVeterinario(Utente user_login) {
       

        initComponents();
        setLocationRelativeTo(null);
        this.jPanelFiltri.setVisible(false);
        setVisible(true);
        setTitle("Benvenuto, "+user_login.getNome()+ " " + user_login.getCognome() );
        
        user.setUsername(user_login.getUsername());
        user.setNome(user_login.getNome());
        user.setCognome(user_login.getCognome());
        
        String[] jTableAnimaliHeaders  = {"Codice Animale","Nome Animale","Specie","Data di Nascita","Genere","Ultima Visita","Salute","Presente"};
        selectmode(this.jTableAnimali);   
        creaTabella(this.jTableAnimali, jTableAnimaliHeaders);
        this.jTableAnimali.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        Show_Animali_In_JTable(this.jTableAnimali);
        
         DBConnect conn=new DBConnect();
         ArrayList<Animale> list = conn.selezionaAnimaliSpecie();
        for(int i = 0; i < list.size(); i++)  this.jComboBoxSpecie.addItem(list.get(i).getSpecie()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonLogout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAnimali = new javax.swing.JTable();
        jButtonSchedaAnimale = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelFiltri = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxGenere = new javax.swing.JComboBox<>();
        jComboBoxSpecie = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jComboBoxSalute = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxPresente = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jCheckBoxFiltri = new javax.swing.JCheckBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(7, 9), new java.awt.Dimension(7, 9), new java.awt.Dimension(7, 9));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Veterinario");
        setResizable(false);

        jButtonLogout.setText("Logout");
        jButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogoutActionPerformed(evt);
            }
        });

        jTableAnimali.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", ""},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTableAnimali.getTableHeader().setResizingAllowed(false);
        jTableAnimali.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableAnimali);

        jButtonSchedaAnimale.setText("Scheda Animale");
        jButtonSchedaAnimale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSchedaAnimaleActionPerformed(evt);
            }
        });

        jLabel1.setText("Filtri di ricerca:");

        jLabel2.setText("Specie: ");

        jLabel3.setText("Genere:");

        jComboBoxGenere.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "M", "F" }));

        jComboBoxSpecie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jComboBoxSpecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSpecieActionPerformed(evt);
            }
        });

        jButton1.setText("Filtra");

        jComboBoxSalute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "SANO", "MALATO" }));

        jLabel4.setText("Presente:");

        jComboBoxPresente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Si", "No" }));

        jLabel5.setText("Salute:");

        jLabel6.setText("Data di Nascita compresa tra:");

        jLabel7.setText("Data dell'ultima visita compresa tra: ");

        jLabel8.setText("e");

        jLabel9.setText("e");

        javax.swing.GroupLayout jPanelFiltriLayout = new javax.swing.GroupLayout(jPanelFiltri);
        jPanelFiltri.setLayout(jPanelFiltriLayout);
        jPanelFiltriLayout.setHorizontalGroup(
            jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFiltriLayout.createSequentialGroup()
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38)
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxSpecie, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxGenere, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelFiltriLayout.createSequentialGroup()
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(30, 30, 30)
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxPresente, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSalute, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 76, Short.MAX_VALUE)
                .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFiltriLayout.createSequentialGroup()
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFiltriLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(101, 101, 101))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFiltriLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(68, 68, 68))))
        );
        jPanelFiltriLayout.setVerticalGroup(
            jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelFiltriLayout.createSequentialGroup()
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxGenere, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel6)))
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxSpecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8))
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jComboBoxPresente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))
                        .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxSalute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelFiltriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addGroup(jPanelFiltriLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jCheckBoxFiltri.setText("Attiva/Disattiva");
        jCheckBoxFiltri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxFiltriMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxFiltri)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelFiltri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(284, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonSchedaAnimale))
                                .addGap(82, 82, 82))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBoxFiltri))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 23, Short.MAX_VALUE)
                        .addComponent(jButtonSchedaAnimale)
                        .addGap(53, 53, 53)
                        .addComponent(jButtonLogout)
                        .addGap(5, 5, 5)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelFiltri, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogoutActionPerformed
        // TODO add your handling code here:
        JLogin log = new JLogin();
        log.setLocationRelativeTo(null);
        log.setVisible(true);
        log.close(this);
    }//GEN-LAST:event_jButtonLogoutActionPerformed

    private void jButtonSchedaAnimaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSchedaAnimaleActionPerformed
        // TODO add your handling code here:
 
        if(jTableAnimali.getSelectedRow() == -1) JOptionPane.showMessageDialog(null, "Errore: Nessuna riga selezionata", "Errore", JOptionPane.ERROR_MESSAGE);
        else{
            if(!"".equals(getTableSelectedItem(this.jTableAnimali, "Codice Animale")) )
            {
            DBConnect conn = new DBConnect();
            ProgettoZoo pz = new ProgettoZoo();
           COD_AN = getTableSelectedItem(this.jTableAnimali, "Codice Animale");
           NOME = getTableSelectedItem(this.jTableAnimali, "Nome Animale");
           SPECIE = getTableSelectedItem(this.jTableAnimali, "Specie");
           GENERE = getTableSelectedItem(this.jTableAnimali, "Genere");
           HABITAT = conn.checkAnimalHabitat(COD_AN);

           
           String DataTable = getTableSelectedItem(this.jTableAnimali, "Data di Nascita"); 
           DATANASCITA = pz.ConvertStringToDate(DataTable, "dd-MM-yyyy");
           
                      
           String salute = getTableSelectedItem(this.jTableAnimali, "Salute");
           SALUTE = "SANO".equals(salute);
           
           String presente = getTableSelectedItem(this.jTableAnimali, "Presente");
           PRESENTE = "SI".equals(presente);
              
           
           anim_sel.setId(COD_AN);
           anim_sel.setNome(NOME);
           anim_sel.setSpecie(SPECIE);
           anim_sel.setSesso(GENERE);
           anim_sel.setHabitat(HABITAT);
           anim_sel.setDataNascita(DATANASCITA);
           anim_sel.setSalute(SALUTE);
           anim_sel.setPresente(PRESENTE);
           
           setVisible(false);            
           new JSchedaAnimale_Veterinario(anim_sel,user);  
           
            }
            else JOptionPane.showMessageDialog(null, "Errore: selezionata riga nulla", "Errore", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jButtonSchedaAnimaleActionPerformed

    private void jCheckBoxFiltriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxFiltriMouseClicked
        // TODO add your handling code here:
        
        if(this.jCheckBoxFiltri.isSelected())
        this.jPanelFiltri.setVisible(true);
        else this.jPanelFiltri.setVisible(false);
        
    }//GEN-LAST:event_jCheckBoxFiltriMouseClicked

    private void jComboBoxSpecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSpecieActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBoxSpecieActionPerformed
    
    //Restituisce il valore di una certa colonna di una tabella in base alla riga selezionata.
    public String getTableSelectedItem(JTable table, String item)
    {
        String selezione = "";
        int stop = -1;
        ArrayList jTableHeaders = new ArrayList();
        for(int i=0; i<table.getColumnCount(); i++)
        {  
            jTableHeaders.add(i,table.getColumnName(i));         
            if( jTableHeaders.contains(item)){
                    stop = i;
                    selezione = getTableValue(table, i);
                    return selezione;
                }
        }
        if(stop == -1) {
            JOptionPane.showMessageDialog(null, "INDICE TABELLA NON TROVATO", "Errore", JOptionPane.ERROR_MESSAGE);}
        return selezione;
    }

public void selectmode(JTable table)
{
    //SET SELECTION MODE
    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
}   

//ritorna il valore della colonna i-esima della riga selezionata nella tabella
    public String getTableValue(JTable table, int column)
    {
        int row = table.getSelectedRow();
        String value = table.getModel().getValueAt(row, column).toString();
        return value;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        /* Create and display the form */
            
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JVeterinario().setVisible(true);
            }
        });
    }
    
    //Crea una tabella non modificabile tranne che per la colonna ultima visita
    /*
    Ho fatto così perchè se andavo a modificare la tabella attraverso custom code
    cambiando il valore tornato da isCellEditable(i,c) la tabella diventava invisibile.
    */
    public void creaTabella(JTable table,String[] columnHeaders){
        Object[][] data = {
            {"","","","","","","","",""},
        };
        
        DefaultTableModel tableModel = new DefaultTableModel(data, columnHeaders)
        {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false, false //messo così per ricordarmi come si fa per ogni singola cella
            };
            
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
    table.setModel(tableModel);
    }
        
   public void Show_Animali_In_JTable(JTable table)
   {
       DBConnect conn = new DBConnect();
       ProgettoZoo pz = new ProgettoZoo();
       ArrayList<Animale> list = conn.animaliList();
       DefaultTableModel model = (DefaultTableModel) table.getModel();
       Object[] row = new Object[8];
       
        table.changeSelection(0, 0, false, false);
       for(int i = 0; i < list.size(); i++)
       {
           ArrayList<Visita> visList = conn.visitaList(list.get(i).getId());
     
           row[0] = list.get(i).getId();
           
           row[1] = list.get(i).getNome();
           
           row[2] = list.get(i).getSpecie();
           
           String DataNascita = list.get(i).getDataNascita().toString();
           String DataNascita_String = pz.NuovoFormatoData(DataNascita, "yyyy-MM-dd", "dd-MM-yyyy");
           row[3] = DataNascita_String;
           
           row[4] = list.get(i).getSesso();
           
           
           if( !visList.isEmpty()){
               String DUV = visList.get(0).getDUV(list.get(i).getId()).toString();
               String DUV_String = pz.NuovoFormatoData(DUV, "yyyy-MM-dd", "dd-MM-yyyy");
               row[5] =  DUV_String;
           }
           else row[5] =  "MAI VISITATO";
           /*
           get(0) perchè la data dell'ultima visita viene registrata ogni volta con un solo elemento
           quindi se metto indice i non va bene perchè altrimenti avanza nella lista in elementi non esistenti
           */
           
           if(list.get(i).getSalute() == true ) row[6] = "SANO";
           else row[6] = "MALATO";
           
           if(list.get(i).getPresente() == true ) row[7] = "SI";
           else row[7] = "NO";
           
           model.addRow(row);
       }
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JButton jButtonSchedaAnimale;
    private javax.swing.JCheckBox jCheckBoxFiltri;
    private javax.swing.JComboBox<String> jComboBoxGenere;
    private javax.swing.JComboBox<String> jComboBoxPresente;
    private javax.swing.JComboBox<String> jComboBoxSalute;
    private javax.swing.JComboBox<String> jComboBoxSpecie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelFiltri;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTableAnimali;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
