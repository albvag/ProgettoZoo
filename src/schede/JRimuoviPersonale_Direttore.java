/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schede;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import logins.JDirettore;
import progettozoo.Animale;
import progettozoo.DBConnect;
import progettozoo.Utente;


/**
 *
 * @author Roberto
 */
public class JRimuoviPersonale_Direttore extends javax.swing.JFrame {
    public static Utente utente = new Utente();
    /**
     * Creates new form JRimuoviPersonale_Direttore
     */
    public JRimuoviPersonale_Direttore(Utente user_log) {
        initComponents();
         DBConnect conn =new DBConnect();
         utente.setUsername(user_log.getUsername());
        utente.setNome(user_log.getNome());
        utente.setCognome(user_log.getCognome());
         
        ArrayList<Utente> list = conn.selezionaPersonaleRuolo();
        
        
        for(int i = 0; i < list.size(); i++)
        {       
            this.jselruolo.addItem(list.get(i).getRuolo());
           
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jselruolo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jselnome = new javax.swing.JComboBox<>();
        jRimuovi = new javax.swing.JButton();
        jChiudi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("                       SELEZIONA IL NOMINATIVO DA RIMUOVERE");

        jselruolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jselruoloActionPerformed(evt);
            }
        });

        jLabel2.setText("SELEZIONA IL RUOLO");

        jLabel3.setText("SELEZIONA IL NOME:");

        jselnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jselnomeActionPerformed(evt);
            }
        });

        jRimuovi.setText("Rimuovi");
        jRimuovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRimuoviActionPerformed(evt);
            }
        });

        jChiudi.setText("Chiudi");
        jChiudi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChiudiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jselnome, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jselruolo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jRimuovi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jChiudi)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jselruolo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jselnome, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRimuovi)
                    .addComponent(jChiudi))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jselruoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jselruoloActionPerformed
             DBConnect conn=new DBConnect();
       String ruolo=this.jselruolo.getSelectedItem().toString();
       ArrayList<Utente> lista= new ArrayList<Utente>();
       
       lista=conn.selezionaPersonaleNome(ruolo);  
      if(!lista.isEmpty())
       {  this.jselnome.removeAllItems();
     for(int j = 0; j < lista.size(); j++)
        {
            
            this.jselnome.addItem(lista.get(j).getNome()+" "+lista.get(j).getCognome());
            
            
        }} // TODO add your handling code here:
    }//GEN-LAST:event_jselruoloActionPerformed

    private void jselnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jselnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jselnomeActionPerformed

    private void jRimuoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRimuoviActionPerformed
        DBConnect conn=new DBConnect();
        String nominativo=this.jselnome.getSelectedItem().toString();
        String ruolo=this.jselruolo.getSelectedItem().toString();
        
        String nome=nominativo.intern();
        
       
        String [] nom=nome.split(" ");
        int no=nom.length-1;
        String n=nom[no];  
         String cod=conn.selezionacodiceImpiegato(n);
           int reply = JOptionPane.showConfirmDialog(null, "Vuoi eliminare l'utente "+this.jselnome.getSelectedItem().toString()+"\n di ruolo "+this.jselruolo.getSelectedItem().toString()+"?" , "Confermare?", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION)
                { conn.deletePersonaleImpiegato(cod);
         conn.deletePersonaleUtente(cod);
         JOptionPane.showMessageDialog(null, "L'UTENTE SELEZIONATO E' STATO RIMOSSO");

          if(null == this.jselruolo.getSelectedItem().toString()) {
              JOptionPane.showMessageDialog(null, "ERRORE");
        } else switch (this.jselruolo.getSelectedItem().toString()) {
            case "Direttore":
                conn.deleteDirettore(cod);
                break;
        //System.out.println(this.jselruolo.getSelectedItem().toString());
            case "Veterinario":
                conn.deleteVeterinario(cod);
                break;
            case "Custode":
                conn.deleteCustode(cod);
                break;
            case "Cassiere":
                conn.deleteCassiere(cod);
                break;
            default:
                JOptionPane.showMessageDialog(null, "ERRORE");
                break;
        }
           JListaPersonale_Direttore lisper = new JListaPersonale_Direttore(utente);
        lisper.setLocationRelativeTo(null);
        lisper.setVisible(true);
                 setVisible(false);
        }
         
    }//GEN-LAST:event_jRimuoviActionPerformed

    private void jChiudiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChiudiActionPerformed
      setVisible(false);
      new JDirettore(utente).setVisible(true);
    }//GEN-LAST:event_jChiudiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JRimuoviPersonale_Direttore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JRimuoviPersonale_Direttore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JRimuoviPersonale_Direttore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JRimuoviPersonale_Direttore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JRimuoviPersonale_Direttore(utente).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jChiudi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jRimuovi;
    private javax.swing.JComboBox<String> jselnome;
    private javax.swing.JComboBox<String> jselruolo;
    // End of variables declaration//GEN-END:variables
}
